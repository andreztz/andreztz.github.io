[{"categories":null,"content":"Entendendo o PYTEST_ADDOPTS e como desabilitar warnings no pytest Ao executar testes automatizados em Python, é comum receber avisos (warnings) durante a execução dos testes. Para lidar com esses avisos, o Pytest oferece diversas opções para desativá-los. Neste artigo vamos explorar como utilizar a PYTEST_ADDOPTS para desabilita-los. PYTEST_ADDOPTS¶ This contains a command-line (parsed by the py:mod:shlex module) that will be prepended to the command line given by the user, see Builtin configuration file options for more information. ","date":"03-17-2023","objectID":"/desativar_avisos_no_pytest/:0:0","tags":null,"title":"Desativar_avisos_do_pytest","uri":"/desativar_avisos_no_pytest/"},{"categories":null,"content":"Entendendo o problema Vamos imaginar que estamos executando testes em uma aplicação Python utilizando o Pytest e nos deparamos com a seguinte saída: ===================================== warnings summary ====================================== tests/test_translator.py::test_translator_hello_world tests/test_translator.py::test_api_manager /home/ztz/projects/ztranslator/.venv/lib/python3.10/site-packages/httpx/_config.py:156: DeprecationWarning: ssl.PROTOCOL_TLS is deprecated context = ssl.SSLContext(ssl.PROTOCOL_TLS) tests/test_translator.py::test_translator_hello_world tests/test_translator.py::test_api_manager /home/ztz/projects/ztranslator/.venv/lib/python3.10/site-packages/httpx/_config.py:159: DeprecationWarning: ssl.OP_NO_SSL*/ssl.OP_NO_TLS* options are deprecated context.options |= ssl.OP_NO_TLSv1 tests/test_translator.py::test_translator_hello_world tests/test_translator.py::test_api_manager /home/ztz/projects/ztranslator/.venv/lib/python3.10/site-packages/httpx/_config.py:160: DeprecationWarning: ssl.OP_NO_SSL*/ssl.OP_NO_TLS* options are deprecated context.options |= ssl.OP_NO_TLSv1_1 -- Docs: https://docs.pytest.org/en/stable/warnings.html Esses avisos podem ser gerados por diversos motivos, como o uso de funções obsoletas, comportamentos não recomendados, entre outros, sendo úteis para que o desenvolvedor identifique possíveis problemas na sua aplicação ou nas bibliotecas utilizadas. No entanto, em alguns casos, eles podem não ser importantes para o teste em questão ou podem simplesmente ser irritantes, sujando a tela e tirando o foco do resultado dos testes. ","date":"03-17-2023","objectID":"/desativar_avisos_no_pytest/:1:0","tags":null,"title":"Desativar_avisos_do_pytest","uri":"/desativar_avisos_no_pytest/"},{"categories":null,"content":"Utilizando o PYTEST_ADDOPTS O PYTEST_ADDOPTS é uma variável de ambiente que permite passar opções para o pytest através do Makefile ou exportando-a direto no terminal. Para desabilitar os avisos (warnings) no pytest, podemos utilizar a opção -p no:warnings. ","date":"03-17-2023","objectID":"/desativar_avisos_no_pytest/:2:0","tags":null,"title":"Desativar_avisos_do_pytest","uri":"/desativar_avisos_no_pytest/"},{"categories":null,"content":"Desativando os avisos no makefile Para utilizar o PYTEST_ADDOPTS em conjunto com o Makefile, podemos definir a variável de ambiente no início do arquivo, antes da definição da regra test. Veja o exemplo abaixo: export PYTEST_ADDOPTS=-p no:warnings .PHONY: test test: poetry run pytest -s -v Com a variável PYTEST_ADDOPTS definida, o pytest será executado com a opção -p no:warnings, que desabilita todos os avisos (warnings) durante a execução dos testes. Caso você queira desabilitar somente alguns avisos específicos, é possível utilizar a opção -W do pytest em conjunto com a opção -p no:warnings. Veja o exemplo abaixo: export PYTEST_ADDOPTS=-p no:warnings -W ignore::DeprecationWarning .PHONY: test test: poetry run pytest -s -v Com a opção -W ignore::DeprecationWarning, o pytest irá desabilitar somente os avisos do tipo DeprecationWarning. ","date":"03-17-2023","objectID":"/desativar_avisos_no_pytest/:2:1","tags":null,"title":"Desativar_avisos_do_pytest","uri":"/desativar_avisos_no_pytest/"},{"categories":null,"content":"Desativando os avisos na linha de comando Além de definir a variável de ambiente no arquivo makefile, também é possível exportá-la na linha de comando utilizando o comando export. Veja o exemplo abaixo: $ export PYTEST_ADDOPTS=\"-p no:warnings\" $ poetry run pytest -s -v Para remover a variável PYTEST_ADDOPTS, use o comando: $ unset PYTEST_ADDOPTS Utilizando o comando env a variável de ambiente PYTEST_ADDOPTS será definida apenas para a execução do pytest e não afetará outras execuções. Veja o exemplo abaixo: $ env PYTEST_ADDOPTS=\"-p no:warnings\" pytest -s -v ","date":"03-17-2023","objectID":"/desativar_avisos_no_pytest/:2:2","tags":null,"title":"Desativar_avisos_do_pytest","uri":"/desativar_avisos_no_pytest/"},{"categories":null,"content":"Conclusão O Pytest é uma ferramenta importante para garantir a qualidade do código em projetos Python. No entanto, durante a execução dos testes automatizados, podem ser gerados avisos (warnings) que, em alguns casos, podem ser irrelevantes ou irritantes. Nesse sentido, a opção -p no:warnings, definida na variável de ambiente PYTEST_ADDOPTS pode ser utilizada para desativar todos os avisos durante a execução dos testes. No entanto, é importante lembrar que esses avisos podem conter informações importantes para identificar possíveis problemas na aplicação ou bibliotecas utilizadas. Portanto, a desativação dos avisos deve ser feita com cuidado e de forma criteriosa, de modo a não comprometer a qualidade do código. https://docs.pytest.org/en/7.2.x/ https://docs.pytest.org/en/7.2.x/reference/reference.html#envvar-PYTEST_ADDOPTS ","date":"03-17-2023","objectID":"/desativar_avisos_no_pytest/:3:0","tags":null,"title":"Desativar_avisos_do_pytest","uri":"/desativar_avisos_no_pytest/"},{"categories":null,"content":"Corretor ortográfico no neovim O editor de texto neovim usa o formato de arquivo .spl para armazenar palavras de uma determinada linguagem, essas são usadas para fazer a verificação ortográfica. O arquivo .spl é um arquivo binário, esse formato proporciona o rápido carregamento da lista de palavras ao mesmo tempo que a mantém pequena. O arquivo .spl pode ser criado a partir de arquivos myspell .aff e .dic usados pelo verificador ortográfico VERO sigla que significa VERificador Ortografico do LibreOffice. ","date":"05-15-2022","objectID":"/neovim_spell_check/:0:0","tags":null,"title":"Corretor ortográfico no Neovim","uri":"/neovim_spell_check/"},{"categories":null,"content":"Gerar um arquivo spell Para gerar o arquivo .spl português do Brasil siga os passos a seguir: $ mkdir /tmp/vero \u0026\u0026 cd /tmp/vero $ wget https://pt-br.libreoffice.org/assets/Uploads/PT-BR-Documents/VERO/VeroptBR3215AOC.oxt $ file VeroptBR3215AOC.oxt VeroptBR3215AOC.oxt: Zip archive data, at least v2.0 to extract, compression method=deflate $ unzip VeroptBR3215AOC.oxt Abra o vim no diretório corrente e execute o comando :mkspell pt pt_BR para gerar o .spl :mkspell pt pt_BR # ... Saída suprimida Reading dictionary file pt_BR.dic... Compressed case-folded of 16207519 nodes; 290324 (1%) remaining Compressed keep-case of 189406 nodes; 10459 (5%) remaining # ... Saída suprimida Compressed keep-case of 596998 nodes; 596998 (100%) remaining Compressing word tree... Compressed case-folded of 55323495 nodes; 47773995 (86%) remaining Compressed keep-case of 746484 nodes; 601437 (80%) remaining Writing spell file pt.utf-8.spl... Done! A saída é um arquivo pt.utf-8.spl, mova-o para ~/.local/share/nvim/spell/ $ mv /tmp/vero/pt.utf-8.spl ~/.local/share/nvim/spell Obs.: De acordo com a documentação, o neovim busca por spellfiles no runtimepath no diretório spell. ","date":"05-15-2022","objectID":"/neovim_spell_check/:0:1","tags":null,"title":"Corretor ortográfico no Neovim","uri":"/neovim_spell_check/"},{"categories":null,"content":"Uso A medida que o corretor ortográfico detecta a palavra incorreta, essa é marcada com um sublinhado. Para corrigi-la, posicione o cursor sob a mesma, no modo Visual pressione z + =. Um menu irá mostrar as palavras sugeridas pelo corretor, então é só escolher a correta. No modo de inserção, com o cursor posicionado no fim da palavra com erro, pressione ctrl + x + s para exibir a caixa de sugestões, funciona como o autocompletar de palavras usando o ctrl + p. Ativar o corretor ortográfico: :setlocal spell spelllang=pt_br,en Obs.: É possivel ativar mais de uma linguagem Carregar um arquivo .spl e ativá-lo: : setlocal spell spellfile=\"/usr/share/vim/vimfiles/spell/pt.utf-8.spl\" spelllang=pt_br Para desativar o corretor: :set nospell ","date":"05-15-2022","objectID":"/neovim_spell_check/:0:2","tags":null,"title":"Corretor ortográfico no Neovim","uri":"/neovim_spell_check/"},{"categories":null,"content":"Comandos do corretor ortográfico no modo visual Comando Ação ]s busca a próxima palavra [s busca a palavra anterior z= mostra a lista de sugestões para a palavra zg adiciona a palavra sob o cursor no dicionário, assim ela não será mais marcada como errada zug desfaz a última palavra adicionada zw remove a palavra sob o cursor do dicionário, assim ela será marcada como errada zuw desfaz a última palavra removida ","date":"05-15-2022","objectID":"/neovim_spell_check/:0:3","tags":null,"title":"Corretor ortográfico no Neovim","uri":"/neovim_spell_check/"},{"categories":null,"content":"Comandos do corretor ortográfico no modo inserção Comando Ação ctrl + x + s Exibir a caixa de sugestões ctrl + n Avançar para a próxima sugestão ctrl + p Voltar para a sugestão anterior ","date":"05-15-2022","objectID":"/neovim_spell_check/:0:4","tags":null,"title":"Corretor ortográfico no Neovim","uri":"/neovim_spell_check/"},{"categories":null,"content":"Ativar o corretor ortográfico baseado no tipo de arquivo vim.cmd [[ autocmd BufRead, BufNewFile *.md setlocal spell spelllang=pt_br]] ","date":"05-15-2022","objectID":"/neovim_spell_check/:0:5","tags":null,"title":"Corretor ortográfico no Neovim","uri":"/neovim_spell_check/"},{"categories":null,"content":"Ativar o corretor ortográfico sob demanda nnoremap \u003csilent\u003e \u003cF3\u003e :set spell!\u003cCR\u003e inoremap \u003csilent\u003e \u003cF3\u003e\u003cC-O\u003e:set spell!\u003cCR\u003e ","date":"05-15-2022","objectID":"/neovim_spell_check/:0:6","tags":null,"title":"Corretor ortográfico no Neovim","uri":"/neovim_spell_check/"},{"categories":null,"content":"Configuração global (opcional) No arquivo init.vim \"spell languages set spelllang=pt_br No arquivo init.lua vim.o.spelllang=\"pt_br\" ","date":"05-15-2022","objectID":"/neovim_spell_check/:0:7","tags":null,"title":"Corretor ortográfico no Neovim","uri":"/neovim_spell_check/"},{"categories":null,"content":"Outras linguagens No web site do vim.org existe um diretório com as linguagens usadas pelo vim. Então simplesmente escolha uma, baixe-a no diretório ~/.local/share/nvim/spell e ative o corretor ortográfico. Nvim documentation: spell ","date":"05-15-2022","objectID":"/neovim_spell_check/:0:8","tags":null,"title":"Corretor ortográfico no Neovim","uri":"/neovim_spell_check/"},{"categories":null,"content":"Protegendo o acesso a interface web do openwrt O Openwrt pode ser gerenciado no terminal via ssh, ou pela interface web do usuário LuCI. O uso da interface web facilita a administração do sistema, no entanto, por padrão a interface web não tem suporte a conexão segura usando o HTTPS. Por esse motivo existe o risco de um invasor capturar o tráfego de rede e obter as credenciais de autenticação, visto que a troca de mensagens entre cliente e servidor sem a camada de segurança do HTTPS (SSL/TLS) é feito em texto puro. O Openwrt oferece a opção de implementar o HTTPS, mas é preciso gerar e armazenar um certificado TLS autoassinado e requer a instalação de pacotes adicionais (uci-ssl e dependências). No caso de dispositivos com pouca memoria, instalar pacotes adicionais não é uma opção, então gostaria de apresentar outra configuração que pode ser usada para proteger o acesso à interface web do Openwrt, que é encapsular o tráfego http via ssh. Primeiro vamos fazer uma cópia e olhar o arquivo de configuração padrão do servidor web. $ scp openwrt:/etc/config/uhttpd ~ uhttpd 100% 710 458.3KB/s 00:00 $ head ~/uhttpd # Server configuration config uhttpd main # HTTP listen addresses, multiple allowed list listen_http 0.0.0.0:80 list listen_http [::]:80 # HTTPS listen addresses, multiple allowed list listen_https 0.0.0.0:443 list listen_https [::]:443 Usando o comando netstat -apn | grep :80 listamos os soquetes TCP/IP abertos pelo servidor web. root@openwrt:~# netstat -apn | grep :80 tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN tcp 0 0 :::80 :::* LISTEN root@openwrt:~# netstat -ana | grep :443 root@openwrt:~# A linha 0.0.0.0:80 nos diz que o computador local esta ouvindo a porta 80, a espera de conexões de qualquer computador remoto. O 0.0.0.0 é um endereço especial que representa todas as interfaces de rede com um IP válido nesse host, por exemplo, poderíamos ter duas interfaces com os seguintes endereços 192.168.1.1, 172.17.0.2 como o servidor web escuta usando o endereço 0.0.0.0:80 ambos respondem por esse endereço de socket. Agora a configuração do servidor web uHTTPd deve ser ajustada, para fazer isso conectamos ao roteador via SSH e abrimos o arquivo /etc/config/uhttpd. # vim /etc/config/uhttpd Em seguida, comentamos as linhas que contêm list listen_http * e adicionamos a linha list listen_http 127.0.0.1:80 . A seguir temos as primeiras linhas do arquivo de configuração após a edição. # Server configuration config uhttpd main # HTTP listen addresses, multiple allowed # list listen_http 0.0.0.0:80 # esta linha deve estar comentada # list listen_http [::]:80 # esta linha deve estar comentada # HTTPS listen addresses, multiple allowed # list listen_https 0.0.0.0:443 # esta linha deve estar comentada # list listen_https [::]:443 # esta linha deve estar comentada # linha adicionada list listen_http 127.0.0.1:80 ... Salve o arquivo e reinicie o serviço uHTTPd usando o comando: # /etc/init.d/uhttpd restart Com o comando netstat vemos que agora nosso servidor web escuta em um novo endereço: root@openwrt:~# netstat -na | grep :80 tcp 0 0 127.0.0.1:80 0.0.0.0:* LISTEN O uso do endereço 127.0.0.1 tem objetivo de restringir o acesso a interface web para host remotos usando a interface de loopback, que é uma interface de rede virtual que é reservada para a comunicação interna no host. Depois de reiniciar o servidor, a interface web do LuCI não esta acessível através do IP usual 192.168.1.1, agora o servidor web escuta por novas conexões usando o endereço 127.0.0.1:80 e só podemos alcançá-la por meio de um túnel ssh. Para criar o túnel, execute o seguinte comando no terminal: veja: 127.0.0.1 vs 0.0.0.0 # ssh -L 127.0.0.1:8080:127.0.0.1:80 root@192.168.1.1 veja: manual ssh -L Encaminhamento de portas Para evitar sempre digitar todo o comando que cria o túnel ssh adicione ao arquivo ~/.ssh/config o seguite: Host luci-tunnel Hostname openwrt.lan Port 22 User root LocalForward 127.0.0.1:8080 127.0.0.1:80 Então o tunel ssh pode ser criado com o seguinte comand","date":"04-05-2022","objectID":"/openwrt-interface-web-seguranca/:0:0","tags":null,"title":"Protegendo o acesso a interface web do Openwrt","uri":"/openwrt-interface-web-seguranca/"},{"categories":null,"content":"Segurança adicional Para minimizar os riscos de acesso não autorizado através da interface web, ative o servidor web via ssh somente quando necessário. /etc/init.d/uhttpd disable /etc/init.d/uhttpd stop ","date":"04-05-2022","objectID":"/openwrt-interface-web-seguranca/:1:0","tags":null,"title":"Protegendo o acesso a interface web do Openwrt","uri":"/openwrt-interface-web-seguranca/"},{"categories":null,"content":"uci comandos O uci pode ajustar a configuração do uhttpd sem usar um editor de texto, no terminal digite as linhas a seguir: # uci -q delete uhttpd.main.listen_http # uci add_list uhttpd.main.listen_http=\"127.0.0.1:80\" # uci add_list uhttpd.main.listen_http=\"[::1]:80\" # uci -q delete uhttpd.main.listen_https # uci add_list uhttpd.main.listen_https=\"127.0.0.1:443\" # uci add_list uhttpd.main.listen_https=\"[::1]:443\" # uci commit uhttpd # /etc/init.d/uhttpd restart ","date":"04-05-2022","objectID":"/openwrt-interface-web-seguranca/:2:0","tags":null,"title":"Protegendo o acesso a interface web do Openwrt","uri":"/openwrt-interface-web-seguranca/"},{"categories":null,"content":"Teclas de atalho fornecem um método rápido e fácil para a executar comandos a partir de uma combinação de teclas predefinida. No openbox para definir uma tecla de atalho basta editar o arquivo ~/.config/openbox/rc.xml. ","date":"05-31-2021","objectID":"/atalhos-teclado-openbox/:0:0","tags":null,"title":"Como configurar teclas de atalho no Openbox","uri":"/atalhos-teclado-openbox/"},{"categories":null,"content":"Syntax \u003ckeyboard\u003e ... \u003ckeybind key=\"KEY-COMBINATION...\"\u003e ...ACTIONS... \u003c/keybind\u003e ... \u003c/keyboard\u003e KEY-COMBINATION é a combinação de teclas que liga a uma ação. O formato para KEY-COMBINATION é: Modificador-Modificador-Tecla (ex.: C-S-T). Qualquer número de modificadores (0 ou mais) podem ser usados juntos e cada um é separado por um “-”. Modificadores S tecla Shift C tecla Control A tecla Alt W tecla Super (tecla Windows) M tecla Meta H tecla Hyper Exemplo \u003ckeybind key=\"S-A-T\"\u003e \u003caction name=\"Execute\"\u003e \u003ccommand\u003epython /caminho/para/executável\u003c/command\u003e \u003c/action\u003e \u003c/keybind\u003e O Openbox nem sempre reflete automaticamente as alterações feitas em seus arquivos de configurações, consequentemente será necessário recarregar manualmente esses arquivos depois de editados. $ openbox --reconfigure Referência: http://openbox.org/wiki/Help:Bindings#Key_bindings ","date":"05-31-2021","objectID":"/atalhos-teclado-openbox/:1:0","tags":null,"title":"Como configurar teclas de atalho no Openbox","uri":"/atalhos-teclado-openbox/"},{"categories":null,"content":"Sobre André P. Santos Bem vido ao meu espaço na web, este é uma ferramenta de documentação e bloco de rascunhos para notas, links e trechos de código para referencias futuras. Sou um entusiasta de tecnologia, python e linux tem me acompanhado desde o principio sendo as minhas principais ferramentas para exploração e validação de idéias. Atualmente estou estudando a linguagem C, e a ferramenta de automação e configuração ansible. ","date":"01-01-0001","objectID":"/about/:1:0","tags":null,"title":"","uri":"/about/"}]