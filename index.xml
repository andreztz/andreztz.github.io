<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>André P. Santos</title><link>http://andreztz.github.io/</link><description>Recent content on André P. Santos</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>andreztz@gmail.com (André P. Santos)</managingEditor><webMaster>andreztz@gmail.com (André P. Santos)</webMaster><lastBuildDate>Sun, 09 Apr 2023 01:24:22 -0300</lastBuildDate><atom:link href="http://andreztz.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Use o git para gerenciar dotfiles</title><link>http://andreztz.github.io/use_o_git_para_gerenciar_dotfiles/</link><pubDate>Sun, 09 Apr 2023 01:24:22 -0300</pubDate><author>andreztz@gmail.com (André P. Santos)</author><guid>http://andreztz.github.io/use_o_git_para_gerenciar_dotfiles/</guid><description>Use o Git para gerenciar dotfiles. A técnica de versionamento de dotfiles consiste em criar um repositório Git do tipo bare dentro de $HOME, que, ao contrário de um repositório Git padrão, não possui um diretório de trabalho associado. Sendo assim, é necessário definir explicitamente o que o repositório bare deve rastrear. Por fim, é necessário um alias para interagir com esse repositório de forma exclusiva.
Vantagens:
Não há necessidade de usar ferramentas externas Não há uso de links simbólicos Os arquivos são rastreados pelo Git É possível usar branches diferentes para computadores diferentes É possível replicar a configuração facilmente em uma nova instalação Configuração inicial Para iniciar a configuração do seu repositório bare, execute os seguintes comandos no terminal:</description></item><item><title>Entendendo o PYTEST_ADDOPTS e como desabilitar warnings no pytest</title><link>http://andreztz.github.io/desativar_avisos_no_pytest/</link><pubDate>Fri, 17 Mar 2023 02:36:32 -0300</pubDate><author>andreztz@gmail.com (André P. Santos)</author><guid>http://andreztz.github.io/desativar_avisos_no_pytest/</guid><description>Ao executar testes automatizados em Python, é comum receber avisos (warnings) durante a execução dos testes. Para lidar com esses avisos, o Pytest oferece diversas opções para desativá-los. Neste artigo vamos explorar como utilizar a PYTEST_ADDOPTS para desabilita-los.
Entendendo o problema Vamos imaginar que estamos executando testes em uma aplicação Python utilizando o Pytest e nos deparamos com a seguinte saída:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 ===================================== warnings summary ====================================== tests/test_translator.</description></item><item><title>Corretor ortográfico no Neovim</title><link>http://andreztz.github.io/neovim_spell_check/</link><pubDate>Sun, 15 May 2022 22:24:09 -0300</pubDate><author>andreztz@gmail.com (André P. Santos)</author><guid>http://andreztz.github.io/neovim_spell_check/</guid><description>Corretor ortográfico no neovim O editor de texto neovim usa o formato de arquivo .spl para armazenar palavras de uma determinada linguagem, essas são usadas para fazer a verificação ortográfica. O arquivo .spl é um arquivo binário, esse formato proporciona o rápido carregamento da lista de palavras ao mesmo tempo que a mantém pequena.
O arquivo .spl pode ser criado a partir de arquivos myspell .aff e .dic usados pelo verificador ortográfico VERO sigla que significa VERificador Ortografico do LibreOffice.</description></item><item><title>Protegendo o acesso a interface web do Openwrt</title><link>http://andreztz.github.io/openwrt-interface-web-seguranca/</link><pubDate>Tue, 05 Apr 2022 03:49:21 -0300</pubDate><author>andreztz@gmail.com (André P. Santos)</author><guid>http://andreztz.github.io/openwrt-interface-web-seguranca/</guid><description>Protegendo o acesso a interface web do openwrt O Openwrt pode ser gerenciado no terminal via ssh, ou pela interface web do usuário LuCI. O uso da interface web facilita a administração do sistema, no entanto, por padrão a interface web não tem suporte a conexão segura usando o HTTPS. Por esse motivo existe o risco de um invasor capturar o tráfego de rede e obter as credenciais de autenticação, visto que a troca de mensagens entre cliente e servidor sem a camada de segurança do HTTPS (SSL/TLS) é feito em texto puro.</description></item><item><title>Como configurar teclas de atalho no Openbox</title><link>http://andreztz.github.io/atalhos-teclado-openbox/</link><pubDate>Mon, 31 May 2021 02:30:21 -0300</pubDate><author>andreztz@gmail.com (André P. Santos)</author><guid>http://andreztz.github.io/atalhos-teclado-openbox/</guid><description>Teclas de atalho fornecem um método rápido e fácil para a executar comandos a partir de uma combinação de teclas predefinida. No openbox para definir uma tecla de atalho basta editar o arquivo ~/.config/openbox/rc.xml.
Syntax 1 2 3 4 5 6 7 &amp;lt;keyboard&amp;gt; ... &amp;lt;keybind key=&amp;#34;KEY-COMBINATION...&amp;#34;&amp;gt; ...ACTIONS... &amp;lt;/keybind&amp;gt; ... &amp;lt;/keyboard&amp;gt; KEY-COMBINATION é a combinação de teclas que liga a uma ação. O formato para KEY-COMBINATION é: Modificador-Modificador-Tecla (ex.: C-S-T). Qualquer número de modificadores (0 ou mais) podem ser usados juntos e cada um é separado por um &amp;ldquo;-&amp;rdquo;.</description></item><item><title/><link>http://andreztz.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>andreztz@gmail.com (André P. Santos)</author><guid>http://andreztz.github.io/about/</guid><description>Sobre André P. Santos Bem vido ao meu espaço na web, este é uma ferramenta de documentação e bloco de rascunhos para notas, links e trechos de código para referencias futuras.
Sou um entusiasta de tecnologia, python e linux tem me acompanhado desde o principio sendo as minhas principais ferramentas para exploração e validação de idéias. Atualmente estou estudando a linguagem C, e a ferramenta de automação e configuração ansible.</description></item></channel></rss>